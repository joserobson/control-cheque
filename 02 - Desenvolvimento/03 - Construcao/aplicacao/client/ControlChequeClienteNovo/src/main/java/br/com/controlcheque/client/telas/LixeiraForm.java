/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * NewJFrame.java
 *
 * Created on 02/01/2012, 21:57:23
 */
package br.com.controlcheque.client.telas;

import br.com.controlcheque.client.Enum.EnumStatusCheque;
import br.com.controlcheque.client.ServicesImpl.ChequeServerImpl;
import br.com.controlcheque.client.interfaces.InterfaceManutencaoSimples;
import br.com.controlcheque.client.mensagem.MensagemClientGenerica;
import br.com.controlcheque.client.util.DateUtil;
import br.com.controlcheque.client.util.LogUtil;
import br.com.controlcheque.service.Cheque;
import java.text.DateFormat;
import java.text.NumberFormat;
import java.text.SimpleDateFormat;
import java.util.List;
import java.util.concurrent.ExecutionException;
import javax.swing.JOptionPane;
import javax.swing.SwingWorker;

/**
 *
 * @author Cleberson
 */
public class LixeiraForm extends ConsultaBaseForm implements InterfaceManutencaoSimples {

    /**
     * INICIO ATRIBUTOS DA CLASSE
     */
    private List<Cheque> listaChequesRemovidos;
    private ChequeServerImpl chequeServerImpl;

    /**
     * FIM ATRIBUTOS
     */
    /*
     * INICIO CONSTRUTORES
     */
    public LixeiraForm() {
        initComponents();
    }

    public LixeiraForm(List<Cheque> pListChequesRemovidos) throws Exception {
        initComponents();
        this.listaChequesRemovidos = pListChequesRemovidos;
        initialize();
    }

    /*
     * FIM CONSTRUTORES
     */

    /*
     * INICIO METODOS DA CLASSE
     */
    public List<Cheque> getListaChequesRemovidos() {
        return listaChequesRemovidos;
    }

    public void setListaChequesRemovidos(List<Cheque> listaChequesRemovidos) {
        this.listaChequesRemovidos = listaChequesRemovidos;
    }

    @Override
    public void initialize() throws Exception {
        try {
            setLocationRelativeTo(null);
            chequeServerImpl = new ChequeServerImpl();
            preencherTabela();
        } catch (Exception ex) {
            throw ex;
        }
    }

    /**
     * FIM METODOS DA CLASSE
     */
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnl_botoes1 = new javax.swing.JPanel();
        pnl_botoesDivisor4 = new javax.swing.JPanel();
        pnl_botoesDivisor5 = new javax.swing.JPanel();
        lbl_buscaClientes = new javax.swing.JLabel();
        lbl_entrarNaFicha = new javax.swing.JLabel();
        lbl_sair1 = new javax.swing.JLabel();
        pnl_botoes = new javax.swing.JPanel();
        btn_sair1 = new javax.swing.JButton();
        btn_deletar1 = new javax.swing.JButton();
        btn_gravar1 = new javax.swing.JButton();
        pnl_botoesDivisor2 = new javax.swing.JPanel();
        pnl_botoesDivisor3 = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tb_lixeira = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Lixeira");

        pnl_botoes1.setBackground(new java.awt.Color(178, 179, 180));
        pnl_botoes1.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createEtchedBorder(), javax.swing.BorderFactory.createEtchedBorder()));
        pnl_botoes1.setPreferredSize(new java.awt.Dimension(1137, 25));

        pnl_botoesDivisor4.setBackground(new java.awt.Color(178, 179, 180));

        javax.swing.GroupLayout pnl_botoesDivisor4Layout = new javax.swing.GroupLayout(pnl_botoesDivisor4);
        pnl_botoesDivisor4.setLayout(pnl_botoesDivisor4Layout);
        pnl_botoesDivisor4Layout.setHorizontalGroup(
            pnl_botoesDivisor4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 36, Short.MAX_VALUE)
        );
        pnl_botoesDivisor4Layout.setVerticalGroup(
            pnl_botoesDivisor4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        pnl_botoesDivisor5.setBackground(new java.awt.Color(178, 179, 180));

        javax.swing.GroupLayout pnl_botoesDivisor5Layout = new javax.swing.GroupLayout(pnl_botoesDivisor5);
        pnl_botoesDivisor5.setLayout(pnl_botoesDivisor5Layout);
        pnl_botoesDivisor5Layout.setHorizontalGroup(
            pnl_botoesDivisor5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 36, Short.MAX_VALUE)
        );
        pnl_botoesDivisor5Layout.setVerticalGroup(
            pnl_botoesDivisor5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        lbl_buscaClientes.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        lbl_buscaClientes.setForeground(new java.awt.Color(255, 255, 255));
        lbl_buscaClientes.setText("F5: Restaurar");

        lbl_entrarNaFicha.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        lbl_entrarNaFicha.setForeground(new java.awt.Color(255, 255, 255));
        lbl_entrarNaFicha.setText("Delete: Deletar");

        lbl_sair1.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        lbl_sair1.setForeground(new java.awt.Color(255, 255, 255));
        lbl_sair1.setText("Esc: Sair");

        javax.swing.GroupLayout pnl_botoes1Layout = new javax.swing.GroupLayout(pnl_botoes1);
        pnl_botoes1.setLayout(pnl_botoes1Layout);
        pnl_botoes1Layout.setHorizontalGroup(
            pnl_botoes1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnl_botoes1Layout.createSequentialGroup()
                .addGap(43, 43, 43)
                .addComponent(lbl_buscaClientes)
                .addGap(47, 47, 47)
                .addComponent(pnl_botoesDivisor4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(326, 326, 326)
                .addComponent(lbl_entrarNaFicha)
                .addGap(135, 135, 135)
                .addComponent(pnl_botoesDivisor5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(249, 249, 249)
                .addComponent(lbl_sair1)
                .addGap(48, 48, 48))
        );
        pnl_botoes1Layout.setVerticalGroup(
            pnl_botoes1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnl_botoes1Layout.createSequentialGroup()
                .addGap(1, 1, 1)
                .addComponent(lbl_entrarNaFicha))
            .addGroup(pnl_botoes1Layout.createSequentialGroup()
                .addGroup(pnl_botoes1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnl_botoes1Layout.createSequentialGroup()
                        .addComponent(lbl_sair1)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(pnl_botoes1Layout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addGroup(pnl_botoes1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(pnl_botoesDivisor5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lbl_buscaClientes)
                            .addComponent(pnl_botoesDivisor4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap())
        );

        btn_sair1.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        btn_sair1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/32x32/sair32x32.png"))); // NOI18N
        btn_sair1.setText("Sair");
        btn_sair1.setFocusPainted(false);
        btn_sair1.setFocusable(false);
        btn_sair1.setPreferredSize(new java.awt.Dimension(150, 40));
        btn_sair1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_sair1ActionPerformed(evt);
            }
        });

        btn_deletar1.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        btn_deletar1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/32x32/deletar32x32.png"))); // NOI18N
        btn_deletar1.setText("Deletar");
        btn_deletar1.setFocusPainted(false);
        btn_deletar1.setFocusable(false);
        btn_deletar1.setPreferredSize(new java.awt.Dimension(150, 40));
        btn_deletar1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_deletar1ActionPerformed(evt);
            }
        });

        btn_gravar1.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        btn_gravar1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/32x32/salvar32x32.png"))); // NOI18N
        btn_gravar1.setText("Restaurar");
        btn_gravar1.setFocusPainted(false);
        btn_gravar1.setFocusable(false);
        btn_gravar1.setPreferredSize(new java.awt.Dimension(150, 40));
        btn_gravar1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_gravar1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnl_botoesDivisor2Layout = new javax.swing.GroupLayout(pnl_botoesDivisor2);
        pnl_botoesDivisor2.setLayout(pnl_botoesDivisor2Layout);
        pnl_botoesDivisor2Layout.setHorizontalGroup(
            pnl_botoesDivisor2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 4, Short.MAX_VALUE)
        );
        pnl_botoesDivisor2Layout.setVerticalGroup(
            pnl_botoesDivisor2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout pnl_botoesDivisor3Layout = new javax.swing.GroupLayout(pnl_botoesDivisor3);
        pnl_botoesDivisor3.setLayout(pnl_botoesDivisor3Layout);
        pnl_botoesDivisor3Layout.setHorizontalGroup(
            pnl_botoesDivisor3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 4, Short.MAX_VALUE)
        );
        pnl_botoesDivisor3Layout.setVerticalGroup(
            pnl_botoesDivisor3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout pnl_botoesLayout = new javax.swing.GroupLayout(pnl_botoes);
        pnl_botoes.setLayout(pnl_botoesLayout);
        pnl_botoesLayout.setHorizontalGroup(
            pnl_botoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnl_botoesLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btn_gravar1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnl_botoesDivisor2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(324, 324, 324)
                .addComponent(btn_deletar1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(101, 101, 101)
                .addComponent(pnl_botoesDivisor3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(228, 228, 228)
                .addComponent(btn_sair1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        pnl_botoesLayout.setVerticalGroup(
            pnl_botoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(btn_sair1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGroup(pnl_botoesLayout.createSequentialGroup()
                .addGap(1, 1, 1)
                .addGroup(pnl_botoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnl_botoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(pnl_botoesDivisor3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btn_deletar1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnl_botoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(pnl_botoesDivisor2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btn_gravar1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createEtchedBorder(), javax.swing.BorderFactory.createEtchedBorder()), "Cheques Removidos", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial", 0, 12), new java.awt.Color(43, 116, 185))); // NOI18N

        tb_lixeira.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id", "CODIGO", "TITULAR", "BOM PARA", "RECEBI DE", "PASSEI PARA", "VALOR", "BANCO", "SITUACAO", "CONTA", "AGENCIA", "NUMERO", "CPF", "TITULAR", "DATA EMISSAO"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tb_lixeira.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        tb_lixeira.setMinimumSize(new java.awt.Dimension(90, 0));
        jScrollPane1.setViewportView(tb_lixeira);
        tb_lixeira.setDragEnabled(true);
        tb_lixeira.setFillsViewportHeight(true);
        tb_lixeira.setFocusCycleRoot(true);
        tb_lixeira.setFocusTraversalPolicyProvider(true);
        tb_lixeira.setOpaque(false);
        //tb_lixeira.setSelectionBackground(new java.awt.Color(102, 255, 102));
        tb_lixeira.getTableHeader().setReorderingAllowed(false);
        tb_lixeira.setUpdateSelectionOnSort(false);
        tb_lixeira.setVerifyInputWhenFocusTarget(false);

        tb_lixeira.getColumnModel().getColumn(0).setMinWidth(0);
        tb_lixeira.getColumnModel().getColumn(0).setMaxWidth(0);

        tb_lixeira.getColumnModel().getColumn(1).setMinWidth(80);
        tb_lixeira.getColumnModel().getColumn(1).setMaxWidth(80);

        tb_lixeira.getColumnModel().getColumn(2).setMinWidth(200);
        tb_lixeira.getColumnModel().getColumn(2).setMaxWidth(200);

        tb_lixeira.getColumnModel().getColumn(3).setMinWidth(80);

        tb_lixeira.getColumnModel().getColumn(4).setMinWidth(200);

        tb_lixeira.getColumnModel().getColumn(5).setMinWidth(200);
        tb_lixeira.getColumnModel().getColumn(5).setMaxWidth(200);

        tb_lixeira.getColumnModel().getColumn(6).setMinWidth(80);

        tb_lixeira.getColumnModel().getColumn(7).setMinWidth(80);
        tb_lixeira.getColumnModel().getColumn(7).setMaxWidth(80);

        tb_lixeira.getColumnModel().getColumn(8).setMinWidth(80);
        tb_lixeira.getColumnModel().getColumn(8).setMaxWidth(80);

        tb_lixeira.getColumnModel().getColumn(9).setMinWidth(80);
        tb_lixeira.getColumnModel().getColumn(9).setMaxWidth(80);

        tb_lixeira.getColumnModel().getColumn(10).setMinWidth(80);
        tb_lixeira.getColumnModel().getColumn(10).setMaxWidth(80);

        tb_lixeira.getColumnModel().getColumn(11).setMinWidth(80);
        tb_lixeira.getColumnModel().getColumn(11).setMaxWidth(80);

        tb_lixeira.getColumnModel().getColumn(12).setMinWidth(80);

        tb_lixeira.getColumnModel().getColumn(13).setMinWidth(200);
        tb_lixeira.getColumnModel().getColumn(13).setMaxWidth(200);

        tb_lixeira.getColumnModel().getColumn(14).setMinWidth(100);
        tb_lixeira.getColumnModel().getColumn(14).setMaxWidth(100);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 1101, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 376, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pnl_botoes1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pnl_botoes, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addContainerGap()))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(432, Short.MAX_VALUE)
                .addComponent(pnl_botoes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(pnl_botoes1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGap(97, 97, 97)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btn_sair1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_sair1ActionPerformed
        close();
    }//GEN-LAST:event_btn_sair1ActionPerformed

    private void btn_gravar1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_gravar1ActionPerformed
        // TODO add your handling code here:
        preSalvar();
    }//GEN-LAST:event_btn_gravar1ActionPerformed

    private void btn_deletar1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_deletar1ActionPerformed
        // TODO add your handling code here:
        preDeletar();
    }//GEN-LAST:event_btn_deletar1ActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_deletar1;
    private javax.swing.JButton btn_gravar1;
    private javax.swing.JButton btn_sair1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lbl_buscaClientes;
    private javax.swing.JLabel lbl_entrarNaFicha;
    private javax.swing.JLabel lbl_sair1;
    private javax.swing.JPanel pnl_botoes;
    private javax.swing.JPanel pnl_botoes1;
    private javax.swing.JPanel pnl_botoesDivisor2;
    private javax.swing.JPanel pnl_botoesDivisor3;
    private javax.swing.JPanel pnl_botoesDivisor4;
    private javax.swing.JPanel pnl_botoesDivisor5;
    private javax.swing.JTable tb_lixeira;
    // End of variables declaration//GEN-END:variables

    /**
     * fecha formulario
     */
    @Override
    public void close() {
        this.dispose();
    }

    @Override
    public void preDeletar() {
        if (tb_lixeira.getSelectedRow() != -1) {
            //mostrar mensagem de confirmacao da remocao do banco selecionado
            if (JOptionPane.showConfirmDialog(rootPane, "Remover Cheque?", "Remover", JOptionPane.YES_NO_CANCEL_OPTION, JOptionPane.QUESTION_MESSAGE)
                    == JOptionPane.YES_OPTION) {
                final JDialogProcessando aguarde = new JDialogProcessando(this, "Aguarde...", "Processando...");
                aguarde.setVisible(true);

                SwingWorker<Cheque, Void> worker = new SwingWorker<Cheque, Void>() {

                    @Override
                    protected Cheque doInBackground() throws Exception {
                        setEnableBotoes(false);
                        try {
                            return (Cheque) deletar();
                        } catch (Exception ex) {
                            aguarde.dispose();
                            tratarErro(ConsultaBancoForm.class, ex);
                        }
                        return null;
                    }

                    @Override
                    protected void done() {
                        try {
                            aguarde.dispose();
                            if (get() != null) {
                                JOptionPane.showMessageDialog(rootPane, "CHEQUE REMOVIDO COM SUCESSO", "SUCESSO", JOptionPane.INFORMATION_MESSAGE);
                            }                            
                            setEnableBotoes(true);                            
                            initialize();
                        } catch (InterruptedException ex) {
                            tratarErro(this.getClass(), ex);
                        } catch (ExecutionException ex) {
                            tratarErro(this.getClass(), ex);
                        } catch (Exception ex) {
                            tratarErro(this.getClass(), ex);
                        }
                    }
                };

                worker.execute();
            }
        }
    }

    @Override
    public Object deletar() throws Exception {
         try {            
            Cheque cheque = getChequeSelecionadoNaGrid();            
            cheque = (Cheque) chequeServerImpl.deletarChequeLixeira(cheque); 
            listaChequesRemovidos = chequeServerImpl.recChequesRemovidos();
            return cheque;
        } catch (Exception ex) {
            LogUtil.logDescricaoErro(this.getClass(), ex);
            throw ex;
        }
    }

    @Override
    public void preSalvar() {
        final JDialogProcessando aguarde = new JDialogProcessando(this, "Aguarde...", "Processando...");
        aguarde.setVisible(true);

        SwingWorker<Object, Void> worker = new SwingWorker<Object, Void>() {

            @Override
            protected Object doInBackground() throws Exception {
                Boolean retorno = false;
                try {
                    setEnableBotoes(Boolean.FALSE);
                    retorno = (Boolean) salvar();
                } catch (Exception ex) {
                    aguarde.dispose();
                    throw ex;
                }
                return retorno;
            }

            @Override
            protected void done() {
                try {
                    aguarde.dispose();
                    if ((Boolean) get()) {
                        JOptionPane.showMessageDialog(rootPane, MensagemClientGenerica.MENSAGEM_ALTERACAO_SUCESSO, "SUCESSO", JOptionPane.INFORMATION_MESSAGE);                        
                        preencherTabela();
                    }

                } catch (InterruptedException ex) {
                    tratarErro(this.getClass(), ex);
                } catch (ExecutionException ex) {
                    tratarErro(this.getClass(), ex);
                } catch (Exception ex) {
                    tratarErro(this.getClass(), ex);
                } finally {
                    setEnableBotoes(Boolean.TRUE);
                }
            }
        };

        worker.execute();
    }

    @Override
    public Object salvar() throws Exception {
        boolean retorno = false;
        try {
            Cheque cheque = (Cheque) chequeServerImpl.recObjeto(getChequeSelecionadoNaGrid());
            cheque.setStatusCheque(EnumStatusCheque.Ativo.getCodigo());
            chequeServerImpl.mantemObject(cheque);
            listaChequesRemovidos = chequeServerImpl.recChequesRemovidos();
            retorno = true;
        } catch (Exception ex) {
            LogUtil.logDescricaoErro(this.getClass(), ex);
            throw ex;
        }

        return retorno;
    }

    @Override
    public void setEnableBotoes(boolean enable) {
        btn_deletar1.setEnabled(enable);
        btn_gravar1.setEnabled(enable);
        btn_sair1.setEnabled(enable);
    }

    /**
     * Retorna o Cheque selecionado na grid pegando somente o Id
     *
     * @return
     */
    private Cheque getChequeSelecionadoNaGrid() {
        Cheque cheque = new Cheque();
        cheque.setId(tb_lixeira.getValueAt(tb_lixeira.getSelectedRow(), 0).toString());
        return cheque;
    }

    /**
     * Preenche grid com os cheques
     *
     * @throws Exception
     */
    private void preencherTabela() throws Exception {
        try {
            javax.swing.table.DefaultTableModel dtm = (javax.swing.table.DefaultTableModel) tb_lixeira.getModel();
            dtm.setRowCount(0);
            NumberFormat formatter = NumberFormat.getCurrencyInstance();
            formatter.setMaximumFractionDigits(2);
            final DateFormat dateFormatter = new SimpleDateFormat("dd/MM/yyyy");
            if (listaChequesRemovidos != null
                    && !listaChequesRemovidos.isEmpty()) {
                // ordenarLista(listaChequesRemovidos, p_ordenacao);
                for (int i = 0; i < listaChequesRemovidos.size(); i++) {
                    dtm.addRow(new Object[]{
                                listaChequesRemovidos.get(i).getId(),
                                listaChequesRemovidos.get(i).getCodigoCheque(),
                                listaChequesRemovidos.get(i).getTitular(),
                                dateFormatter.format(DateUtil.asDate(listaChequesRemovidos.get(i).getDataBomPara())),
                                listaChequesRemovidos.get(i).getRecebiDe(),
                                listaChequesRemovidos.get(i).getPasseiPara(),
                                formatter.format(listaChequesRemovidos.get(i).getValor()),
                                listaChequesRemovidos.get(i).getBanco().getCodigo(),
                                listaChequesRemovidos.get(i).getSituacaoCheque(),
                                listaChequesRemovidos.get(i).getConta(),
                                listaChequesRemovidos.get(i).getAgencia(),
                                listaChequesRemovidos.get(i).getNumero(),
                                listaChequesRemovidos.get(i).getCpfTitular(),
                                listaChequesRemovidos.get(i).getTitular(),
                                listaChequesRemovidos.get(i).getDataEmissao() != null
                                ? dateFormatter.format(DateUtil.asDate(listaChequesRemovidos.get(i).getDataEmissao())) : null
                            });
                }

            } else {
                JOptionPane.showMessageDialog(null, "A lista está vazia!", "Atenção!", JOptionPane.ERROR_MESSAGE);
            }
        } catch (Exception ex) {
            throw ex;
        }
    }
}
